

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Project : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Project entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Project()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Project(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Project> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Project.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ProjectId
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.ProjectId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectName
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.ProjectName);
            }
            set
            {
                global::LightSwitchApplication.Project.DetailsClass.SetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.ProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShortDesc
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.ShortDesc);
            }
            set
            {
                global::LightSwitchApplication.Project.DetailsClass.SetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.ShortDesc, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortDesc_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortDesc_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortDesc_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LongDesc
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.LongDesc);
            }
            set
            {
                global::LightSwitchApplication.Project.DetailsClass.SetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.LongDesc, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongDesc_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongDesc_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongDesc_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PointPerson
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.PointPerson);
            }
            set
            {
                global::LightSwitchApplication.Project.DetailsClass.SetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.PointPerson, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PointPerson_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PointPerson_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PointPerson_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateStarted
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.DateStarted);
            }
            set
            {
                global::LightSwitchApplication.Project.DetailsClass.SetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.DateStarted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateStarted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateStarted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateStarted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateFinished
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.DateFinished);
            }
            set
            {
                global::LightSwitchApplication.Project.DetailsClass.SetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.DateFinished, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateFinished_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateFinished_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateFinished_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Status
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.Project.DetailsClass.SetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AdditionalNotes
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.AdditionalNotes);
            }
            set
            {
                global::LightSwitchApplication.Project.DetailsClass.SetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.AdditionalNotes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AdditionalNotes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AdditionalNotes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AdditionalNotes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Company Company
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Company);
            }
            set
            {
                global::LightSwitchApplication.Project.DetailsClass.SetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Company, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Task> Tasks
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetValue(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Tasks);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Task> TasksQuery
        {
            get
            {
                return global::LightSwitchApplication.Project.DetailsClass.GetQuery(this, global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Tasks);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Project,
                global::LightSwitchApplication.Project.DetailsClass,
                global::LightSwitchApplication.Project.DetailsClass.IImplementation,
                global::LightSwitchApplication.Project.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.ProjectId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>.Entry
                __ProjectEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>.Entry(
                    global::LightSwitchApplication.Project.DetailsClass.__Project_CreateNew,
                    global::LightSwitchApplication.Project.DetailsClass.__Project_Created,
                    global::LightSwitchApplication.Project.DetailsClass.__Project_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Project __Project_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Project> es)
            {
                return new global::LightSwitchApplication.Project(es);
            }
            private static void __Project_Created(global::LightSwitchApplication.Project e)
            {
                e.Project_Created();
            }
            private static bool __Project_AllowSaveWithErrors(global::LightSwitchApplication.Project e)
            {
                bool result = false;
                e.Project_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Project.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, int> ProjectId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.ProjectId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string> ProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.ProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string> ShortDesc
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.ShortDesc) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string> LongDesc
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.LongDesc) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string> PointPerson
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.PointPerson) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>> DateStarted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.DateStarted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>> DateFinished
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.DateFinished) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<int>> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string> AdditionalNotes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.AdditionalNotes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Company> Company
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Company) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Company>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Task> Tasks
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Tasks) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Task>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ProjectId { get; }
                new string ProjectName { get; set; }
                new string ShortDesc { get; set; }
                new string LongDesc { get; set; }
                new string PointPerson { get; set; }
                new global::System.Nullable<global::System.DateTime> DateStarted { get; set; }
                new global::System.Nullable<global::System.DateTime> DateFinished { get; set; }
                new global::System.Nullable<int> Status { get; set; }
                new string AdditionalNotes { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Company { get; set; }
                new global::System.Collections.IEnumerable Tasks { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, int>.Entry
                    ProjectId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, int>.Entry(
                        "ProjectId",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectId_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectId_Validate,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectId_OnValueChanged);
                private static void _ProjectId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, int>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectId, sf);
                }
                private static bool _ProjectId_ComputeIsReadOnly(global::LightSwitchApplication.Project e)
                {
                    bool result = false;
                    e.ProjectId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectId_Validate(global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectId_Validate(r);
                }
                private static int _ProjectId_GetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectId;
                }
                private static void _ProjectId_OnValueChanged(global::LightSwitchApplication.Project e)
                {
                    e.ProjectId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Entry
                    ProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Entry(
                        "ProjectName",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectName_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectName_Validate,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectName_GetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectName_SetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ProjectName_OnValueChanged);
                private static void _ProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectName, sf);
                }
                private static bool _ProjectName_ComputeIsReadOnly(global::LightSwitchApplication.Project e)
                {
                    bool result = false;
                    e.ProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectName_Validate(global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectName_Validate(r);
                }
                private static string _ProjectName_GetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectName;
                }
                private static void _ProjectName_SetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectName = v;
                }
                private static void _ProjectName_OnValueChanged(global::LightSwitchApplication.Project e)
                {
                    e.ProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Entry
                    ShortDesc = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Entry(
                        "ShortDesc",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ShortDesc_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ShortDesc_ComputeIsReadOnly,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ShortDesc_Validate,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ShortDesc_GetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ShortDesc_SetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._ShortDesc_OnValueChanged);
                private static void _ShortDesc_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._ShortDesc, sf);
                }
                private static bool _ShortDesc_ComputeIsReadOnly(global::LightSwitchApplication.Project e)
                {
                    bool result = false;
                    e.ShortDesc_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShortDesc_Validate(global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShortDesc_Validate(r);
                }
                private static string _ShortDesc_GetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.ShortDesc;
                }
                private static void _ShortDesc_SetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShortDesc = v;
                }
                private static void _ShortDesc_OnValueChanged(global::LightSwitchApplication.Project e)
                {
                    e.ShortDesc_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Entry
                    LongDesc = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Entry(
                        "LongDesc",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._LongDesc_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._LongDesc_ComputeIsReadOnly,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._LongDesc_Validate,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._LongDesc_GetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._LongDesc_SetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._LongDesc_OnValueChanged);
                private static void _LongDesc_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._LongDesc, sf);
                }
                private static bool _LongDesc_ComputeIsReadOnly(global::LightSwitchApplication.Project e)
                {
                    bool result = false;
                    e.LongDesc_IsReadOnly(ref result);
                    return result;
                }
                private static void _LongDesc_Validate(global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LongDesc_Validate(r);
                }
                private static string _LongDesc_GetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.LongDesc;
                }
                private static void _LongDesc_SetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LongDesc = v;
                }
                private static void _LongDesc_OnValueChanged(global::LightSwitchApplication.Project e)
                {
                    e.LongDesc_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Entry
                    PointPerson = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Entry(
                        "PointPerson",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._PointPerson_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._PointPerson_ComputeIsReadOnly,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._PointPerson_Validate,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._PointPerson_GetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._PointPerson_SetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._PointPerson_OnValueChanged);
                private static void _PointPerson_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._PointPerson, sf);
                }
                private static bool _PointPerson_ComputeIsReadOnly(global::LightSwitchApplication.Project e)
                {
                    bool result = false;
                    e.PointPerson_IsReadOnly(ref result);
                    return result;
                }
                private static void _PointPerson_Validate(global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PointPerson_Validate(r);
                }
                private static string _PointPerson_GetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.PointPerson;
                }
                private static void _PointPerson_SetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PointPerson = v;
                }
                private static void _PointPerson_OnValueChanged(global::LightSwitchApplication.Project e)
                {
                    e.PointPerson_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateStarted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateStarted",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateStarted_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateStarted_ComputeIsReadOnly,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateStarted_Validate,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateStarted_GetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateStarted_SetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateStarted_OnValueChanged);
                private static void _DateStarted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._DateStarted, sf);
                }
                private static bool _DateStarted_ComputeIsReadOnly(global::LightSwitchApplication.Project e)
                {
                    bool result = false;
                    e.DateStarted_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateStarted_Validate(global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateStarted_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateStarted_GetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.DateStarted;
                }
                private static void _DateStarted_SetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateStarted = global::LightSwitchApplication.Project.DetailsClass.TruncateDate(v);
                }
                private static void _DateStarted_OnValueChanged(global::LightSwitchApplication.Project e)
                {
                    e.DateStarted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateFinished = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateFinished",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateFinished_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateFinished_ComputeIsReadOnly,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateFinished_Validate,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateFinished_GetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateFinished_SetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._DateFinished_OnValueChanged);
                private static void _DateFinished_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._DateFinished, sf);
                }
                private static bool _DateFinished_ComputeIsReadOnly(global::LightSwitchApplication.Project e)
                {
                    bool result = false;
                    e.DateFinished_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateFinished_Validate(global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateFinished_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateFinished_GetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.DateFinished;
                }
                private static void _DateFinished_SetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateFinished = global::LightSwitchApplication.Project.DetailsClass.TruncateDate(v);
                }
                private static void _DateFinished_OnValueChanged(global::LightSwitchApplication.Project e)
                {
                    e.DateFinished_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<int>>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Status",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.Project e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static global::System.Nullable<int> _Status_GetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.Project e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Entry
                    AdditionalNotes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Entry(
                        "AdditionalNotes",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._AdditionalNotes_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._AdditionalNotes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._AdditionalNotes_Validate,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._AdditionalNotes_GetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._AdditionalNotes_SetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._AdditionalNotes_OnValueChanged);
                private static void _AdditionalNotes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._AdditionalNotes, sf);
                }
                private static bool _AdditionalNotes_ComputeIsReadOnly(global::LightSwitchApplication.Project e)
                {
                    bool result = false;
                    e.AdditionalNotes_IsReadOnly(ref result);
                    return result;
                }
                private static void _AdditionalNotes_Validate(global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AdditionalNotes_Validate(r);
                }
                private static string _AdditionalNotes_GetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.AdditionalNotes;
                }
                private static void _AdditionalNotes_SetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AdditionalNotes = v;
                }
                private static void _AdditionalNotes_OnValueChanged(global::LightSwitchApplication.Project e)
                {
                    e.AdditionalNotes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Company>.Entry
                    Company = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Company>.Entry(
                        "Company",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Company_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Company_ComputeIsReadOnly,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Company_Validate,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Company_GetCoreImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Company_GetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Company_SetImplementationValue,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Company_Refresh,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Company_OnValueChanged);
                private static void _Company_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Company>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._Company, sf);
                }
                private static bool _Company_ComputeIsReadOnly(global::LightSwitchApplication.Project e)
                {
                    bool result = false;
                    e.Company_IsReadOnly(ref result);
                    return result;
                }
                private static void _Company_Validate(global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Company_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Company_GetCoreImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.Company;
                }
                private static global::LightSwitchApplication.Company _Company_GetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Company, ref d._Company);
                }
                private static void _Company_SetImplementationValue(global::LightSwitchApplication.Project.DetailsClass d, global::LightSwitchApplication.Company v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Company, ref d._Company, (i, ev) => i.Company = ev, v);
                }
                private static void _Company_Refresh(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Company, ref d._Company);
                }
                private static void _Company_OnValueChanged(global::LightSwitchApplication.Project e)
                {
                    e.Company_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Task>.Entry
                    Tasks = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Task>.Entry(
                        "Tasks",
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Tasks_Stub,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Tasks_GetReferencedEntities,
                        global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties._Tasks_GetEntityCollection);
                private static void _Tasks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Project.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Task>.Data> c, global::LightSwitchApplication.Project.DetailsClass d, object sf)
                {
                    c(d, ref d._Tasks, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Task> _Tasks_GetReferencedEntities(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass>(global::LightSwitchApplication.Project.DetailsClass.PropertySetProperties.Tasks, ref d._Tasks);
                }
                private static global::System.Collections.IEnumerable _Tasks_GetEntityCollection(global::LightSwitchApplication.Project.DetailsClass d)
                {
                    return d.ImplementationEntity.Tasks;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, int>.Data _ProjectId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Data _ProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Data _ShortDesc;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Data _LongDesc;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Data _PointPerson;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateStarted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateFinished;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::System.Nullable<int>>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, string>.Data _AdditionalNotes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Company>.Data _Company;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass, global::LightSwitchApplication.Task>.Data _Tasks;
            
        }
    
        #endregion
    }
    
    #endregion
}
