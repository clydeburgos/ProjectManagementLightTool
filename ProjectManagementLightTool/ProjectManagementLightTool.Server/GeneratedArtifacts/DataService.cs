//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ApplicationDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ApplicationData_InitializingConnection);
            private static void __ApplicationData_InitializingConnection(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.ApplicationData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    /// <summary>
    /// Provides members to query and update data in the ProjectManagementData datasource.
    /// </summary>
    public sealed partial class ProjectManagementDataService
        : global::LightSwitchApplication.ProjectManagementData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectManagementDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updating(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updated(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Validate(global::LightSwitchApplication.Company entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_Inserting(global::LightSwitchApplication.OtherActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_Inserted(global::LightSwitchApplication.OtherActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_Updating(global::LightSwitchApplication.OtherActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_Updated(global::LightSwitchApplication.OtherActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_Deleting(global::LightSwitchApplication.OtherActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_Deleted(global::LightSwitchApplication.OtherActivity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_Validate(global::LightSwitchApplication.OtherActivity entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OtherActivities_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OtherActivity, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updating(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updated(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::LightSwitchApplication.Project entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_Inserting(global::LightSwitchApplication.Task entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_Inserted(global::LightSwitchApplication.Task entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_Updating(global::LightSwitchApplication.Task entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_Updated(global::LightSwitchApplication.Task entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_Deleting(global::LightSwitchApplication.Task entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_Deleted(global::LightSwitchApplication.Task entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_Validate(global::LightSwitchApplication.Task entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tasks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Task, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_Inserting(global::LightSwitchApplication.TaskDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_Inserted(global::LightSwitchApplication.TaskDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_Updating(global::LightSwitchApplication.TaskDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_Updated(global::LightSwitchApplication.TaskDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_Deleting(global::LightSwitchApplication.TaskDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_Deleted(global::LightSwitchApplication.TaskDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_Validate(global::LightSwitchApplication.TaskDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TaskDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectManagementData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectManagementDataService, global::LightSwitchApplication.Company>
                __CompaniesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectManagementDataService, global::LightSwitchApplication.Company>(
                    "Companies",
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_CanInsert,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_CanUpdate,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_CanDelete,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_CanRead,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_Inserting,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_Inserted,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_Updating,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_Updated,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_Deleting,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_Deleted,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_Validate,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Companies_Filter);
            private static bool __Companies_CanInsert(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Companies_CanInsert(ref result);
                return result;
            }
            private static bool __Companies_CanUpdate(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Companies_CanUpdate(ref result);
                return result;
            }
            private static bool __Companies_CanDelete(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Companies_CanDelete(ref result);
                return result;
            }
            private static bool __Companies_CanRead(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Companies_CanRead(ref result);
                return result;
            }
            private static void __Companies_Inserting(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserting(e);
            }
            private static void __Companies_Inserted(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserted(e);
            }
            private static void __Companies_Updating(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updating(e);
            }
            private static void __Companies_Updated(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updated(e);
            }
            private static void __Companies_Deleting(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleting(e);
            }
            private static void __Companies_Deleted(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleted(e);
            }
            private static void __Companies_Validate(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Companies_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> __Companies_Filter(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter = null;
                d.Companies_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectManagementDataService, global::LightSwitchApplication.OtherActivity>
                __OtherActivitiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectManagementDataService, global::LightSwitchApplication.OtherActivity>(
                    "OtherActivities",
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_CanInsert,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_CanUpdate,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_CanDelete,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_CanRead,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_Inserting,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_Inserted,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_Updating,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_Updated,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_Deleting,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_Deleted,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_Validate,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__OtherActivities_Filter);
            private static bool __OtherActivities_CanInsert(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.OtherActivities_CanInsert(ref result);
                return result;
            }
            private static bool __OtherActivities_CanUpdate(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.OtherActivities_CanUpdate(ref result);
                return result;
            }
            private static bool __OtherActivities_CanDelete(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.OtherActivities_CanDelete(ref result);
                return result;
            }
            private static bool __OtherActivities_CanRead(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.OtherActivities_CanRead(ref result);
                return result;
            }
            private static void __OtherActivities_Inserting(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.OtherActivity e)
            {
                d.OtherActivities_Inserting(e);
            }
            private static void __OtherActivities_Inserted(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.OtherActivity e)
            {
                d.OtherActivities_Inserted(e);
            }
            private static void __OtherActivities_Updating(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.OtherActivity e)
            {
                d.OtherActivities_Updating(e);
            }
            private static void __OtherActivities_Updated(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.OtherActivity e)
            {
                d.OtherActivities_Updated(e);
            }
            private static void __OtherActivities_Deleting(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.OtherActivity e)
            {
                d.OtherActivities_Deleting(e);
            }
            private static void __OtherActivities_Deleted(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.OtherActivity e)
            {
                d.OtherActivities_Deleted(e);
            }
            private static void __OtherActivities_Validate(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.OtherActivity e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OtherActivities_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OtherActivity, bool>> __OtherActivities_Filter(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OtherActivity, bool>> filter = null;
                d.OtherActivities_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectManagementDataService, global::LightSwitchApplication.Project>
                __ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectManagementDataService, global::LightSwitchApplication.Project>(
                    "Projects",
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_CanInsert,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_CanUpdate,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_CanDelete,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_CanRead,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_Inserting,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_Inserted,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_Updating,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_Updated,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_Deleting,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_Deleted,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_Validate,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Projects_Filter);
            private static bool __Projects_CanInsert(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Projects_CanInsert(ref result);
                return result;
            }
            private static bool __Projects_CanUpdate(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Projects_CanUpdate(ref result);
                return result;
            }
            private static bool __Projects_CanDelete(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Projects_CanDelete(ref result);
                return result;
            }
            private static bool __Projects_CanRead(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Projects_CanRead(ref result);
                return result;
            }
            private static void __Projects_Inserting(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserting(e);
            }
            private static void __Projects_Inserted(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserted(e);
            }
            private static void __Projects_Updating(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updating(e);
            }
            private static void __Projects_Updated(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updated(e);
            }
            private static void __Projects_Deleting(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleting(e);
            }
            private static void __Projects_Deleted(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleted(e);
            }
            private static void __Projects_Validate(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Projects_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> __Projects_Filter(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter = null;
                d.Projects_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectManagementDataService, global::LightSwitchApplication.Task>
                __TasksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectManagementDataService, global::LightSwitchApplication.Task>(
                    "Tasks",
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_CanInsert,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_CanUpdate,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_CanDelete,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_CanRead,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_Inserting,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_Inserted,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_Updating,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_Updated,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_Deleting,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_Deleted,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_Validate,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Tasks_Filter);
            private static bool __Tasks_CanInsert(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Tasks_CanInsert(ref result);
                return result;
            }
            private static bool __Tasks_CanUpdate(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Tasks_CanUpdate(ref result);
                return result;
            }
            private static bool __Tasks_CanDelete(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Tasks_CanDelete(ref result);
                return result;
            }
            private static bool __Tasks_CanRead(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.Tasks_CanRead(ref result);
                return result;
            }
            private static void __Tasks_Inserting(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Task e)
            {
                d.Tasks_Inserting(e);
            }
            private static void __Tasks_Inserted(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Task e)
            {
                d.Tasks_Inserted(e);
            }
            private static void __Tasks_Updating(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Task e)
            {
                d.Tasks_Updating(e);
            }
            private static void __Tasks_Updated(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Task e)
            {
                d.Tasks_Updated(e);
            }
            private static void __Tasks_Deleting(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Task e)
            {
                d.Tasks_Deleting(e);
            }
            private static void __Tasks_Deleted(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Task e)
            {
                d.Tasks_Deleted(e);
            }
            private static void __Tasks_Validate(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.Task e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Tasks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Task, bool>> __Tasks_Filter(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Task, bool>> filter = null;
                d.Tasks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectManagementDataService, global::LightSwitchApplication.TaskDetail>
                __TaskDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectManagementDataService, global::LightSwitchApplication.TaskDetail>(
                    "TaskDetails",
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_CanInsert,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_CanUpdate,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_CanDelete,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_CanRead,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_Inserting,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_Inserted,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_Updating,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_Updated,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_Deleting,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_Deleted,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_Validate,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__TaskDetails_Filter);
            private static bool __TaskDetails_CanInsert(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.TaskDetails_CanInsert(ref result);
                return result;
            }
            private static bool __TaskDetails_CanUpdate(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.TaskDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __TaskDetails_CanDelete(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.TaskDetails_CanDelete(ref result);
                return result;
            }
            private static bool __TaskDetails_CanRead(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                bool result = true;
                d.TaskDetails_CanRead(ref result);
                return result;
            }
            private static void __TaskDetails_Inserting(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.TaskDetail e)
            {
                d.TaskDetails_Inserting(e);
            }
            private static void __TaskDetails_Inserted(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.TaskDetail e)
            {
                d.TaskDetails_Inserted(e);
            }
            private static void __TaskDetails_Updating(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.TaskDetail e)
            {
                d.TaskDetails_Updating(e);
            }
            private static void __TaskDetails_Updated(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.TaskDetail e)
            {
                d.TaskDetails_Updated(e);
            }
            private static void __TaskDetails_Deleting(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.TaskDetail e)
            {
                d.TaskDetails_Deleting(e);
            }
            private static void __TaskDetails_Deleted(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.TaskDetail e)
            {
                d.TaskDetails_Deleted(e);
            }
            private static void __TaskDetails_Validate(global::LightSwitchApplication.ProjectManagementDataService d, global::LightSwitchApplication.TaskDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TaskDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TaskDetail, bool>> __TaskDetails_Filter(global::LightSwitchApplication.ProjectManagementDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TaskDetail, bool>> filter = null;
                d.TaskDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ProjectManagementDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ProjectManagementDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ProjectManagementDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ProjectManagementDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ProjectManagementDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ProjectManagementDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ProjectManagementDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ProjectManagementDataService>(
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ProjectManagementDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ProjectManagementDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ProjectManagementDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ProjectManagementDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ProjectManagementDataService>(
                    global::LightSwitchApplication.ProjectManagementDataService.DetailsClass.__ProjectManagementData_InitializingConnection);
            private static void __ProjectManagementData_InitializingConnection(global::LightSwitchApplication.ProjectManagementDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.ProjectManagementData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    #endregion
}
