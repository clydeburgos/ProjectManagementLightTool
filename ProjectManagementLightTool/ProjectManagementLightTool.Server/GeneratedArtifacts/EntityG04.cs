

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Task : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Task entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Task()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Task(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Task> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Task.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Task_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Task_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TaskId
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.TaskId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CodeId
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.CodeId);
            }
            set
            {
                global::LightSwitchApplication.Task.DetailsClass.SetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.CodeId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CodeId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CodeId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CodeId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShortDesc
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.ShortDesc);
            }
            set
            {
                global::LightSwitchApplication.Task.DetailsClass.SetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.ShortDesc, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortDesc_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortDesc_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortDesc_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LongDesc
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.LongDesc);
            }
            set
            {
                global::LightSwitchApplication.Task.DetailsClass.SetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.LongDesc, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongDesc_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongDesc_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongDesc_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateTimeStarted
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.DateTimeStarted);
            }
            set
            {
                global::LightSwitchApplication.Task.DetailsClass.SetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.DateTimeStarted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateTimeStarted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateTimeStarted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateTimeStarted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateTimeFinished
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.DateTimeFinished);
            }
            set
            {
                global::LightSwitchApplication.Task.DetailsClass.SetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.DateTimeFinished, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateTimeFinished_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateTimeFinished_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateTimeFinished_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Status
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.Task.DetailsClass.SetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Severity
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Severity);
            }
            set
            {
                global::LightSwitchApplication.Task.DetailsClass.SetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Severity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.Task.DetailsClass.SetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TaskDetail> TaskDetails
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetValue(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.TaskDetails);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TaskDetail> TaskDetailsQuery
        {
            get
            {
                return global::LightSwitchApplication.Task.DetailsClass.GetQuery(this, global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.TaskDetails);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Task,
                global::LightSwitchApplication.Task.DetailsClass,
                global::LightSwitchApplication.Task.DetailsClass.IImplementation,
                global::LightSwitchApplication.Task.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.TaskId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass>.Entry
                __TaskEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass>.Entry(
                    global::LightSwitchApplication.Task.DetailsClass.__Task_CreateNew,
                    global::LightSwitchApplication.Task.DetailsClass.__Task_Created,
                    global::LightSwitchApplication.Task.DetailsClass.__Task_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Task __Task_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Task> es)
            {
                return new global::LightSwitchApplication.Task(es);
            }
            private static void __Task_Created(global::LightSwitchApplication.Task e)
            {
                e.Task_Created();
            }
            private static bool __Task_AllowSaveWithErrors(global::LightSwitchApplication.Task e)
            {
                bool result = false;
                e.Task_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Task.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, int> TaskId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.TaskId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string> CodeId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.CodeId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string> ShortDesc
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.ShortDesc) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string> LongDesc
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.LongDesc) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>> DateTimeStarted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.DateTimeStarted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>> DateTimeFinished
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.DateTimeFinished) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>> Severity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Severity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.TaskDetail> TaskDetails
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.TaskDetails) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.TaskDetail>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int TaskId { get; }
                new string CodeId { get; set; }
                new string ShortDesc { get; set; }
                new string LongDesc { get; set; }
                new global::System.Nullable<global::System.DateTime> DateTimeStarted { get; set; }
                new global::System.Nullable<global::System.DateTime> DateTimeFinished { get; set; }
                new global::System.Nullable<int> Status { get; set; }
                new global::System.Nullable<int> Severity { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
                new global::System.Collections.IEnumerable TaskDetails { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, int>.Entry
                    TaskId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, int>.Entry(
                        "TaskId",
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._TaskId_Stub,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._TaskId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._TaskId_Validate,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._TaskId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._TaskId_OnValueChanged);
                private static void _TaskId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Task.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, int>.Data> c, global::LightSwitchApplication.Task.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskId, sf);
                }
                private static bool _TaskId_ComputeIsReadOnly(global::LightSwitchApplication.Task e)
                {
                    bool result = false;
                    e.TaskId_IsReadOnly(ref result);
                    return result;
                }
                private static void _TaskId_Validate(global::LightSwitchApplication.Task e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TaskId_Validate(r);
                }
                private static int _TaskId_GetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.ImplementationEntity.TaskId;
                }
                private static void _TaskId_OnValueChanged(global::LightSwitchApplication.Task e)
                {
                    e.TaskId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Entry
                    CodeId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Entry(
                        "CodeId",
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._CodeId_Stub,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._CodeId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._CodeId_Validate,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._CodeId_GetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._CodeId_SetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._CodeId_OnValueChanged);
                private static void _CodeId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Task.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Data> c, global::LightSwitchApplication.Task.DetailsClass d, object sf)
                {
                    c(d, ref d._CodeId, sf);
                }
                private static bool _CodeId_ComputeIsReadOnly(global::LightSwitchApplication.Task e)
                {
                    bool result = false;
                    e.CodeId_IsReadOnly(ref result);
                    return result;
                }
                private static void _CodeId_Validate(global::LightSwitchApplication.Task e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CodeId_Validate(r);
                }
                private static string _CodeId_GetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.ImplementationEntity.CodeId;
                }
                private static void _CodeId_SetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CodeId = v;
                }
                private static void _CodeId_OnValueChanged(global::LightSwitchApplication.Task e)
                {
                    e.CodeId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Entry
                    ShortDesc = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Entry(
                        "ShortDesc",
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._ShortDesc_Stub,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._ShortDesc_ComputeIsReadOnly,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._ShortDesc_Validate,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._ShortDesc_GetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._ShortDesc_SetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._ShortDesc_OnValueChanged);
                private static void _ShortDesc_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Task.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Data> c, global::LightSwitchApplication.Task.DetailsClass d, object sf)
                {
                    c(d, ref d._ShortDesc, sf);
                }
                private static bool _ShortDesc_ComputeIsReadOnly(global::LightSwitchApplication.Task e)
                {
                    bool result = false;
                    e.ShortDesc_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShortDesc_Validate(global::LightSwitchApplication.Task e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShortDesc_Validate(r);
                }
                private static string _ShortDesc_GetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.ImplementationEntity.ShortDesc;
                }
                private static void _ShortDesc_SetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShortDesc = v;
                }
                private static void _ShortDesc_OnValueChanged(global::LightSwitchApplication.Task e)
                {
                    e.ShortDesc_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Entry
                    LongDesc = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Entry(
                        "LongDesc",
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._LongDesc_Stub,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._LongDesc_ComputeIsReadOnly,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._LongDesc_Validate,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._LongDesc_GetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._LongDesc_SetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._LongDesc_OnValueChanged);
                private static void _LongDesc_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Task.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Data> c, global::LightSwitchApplication.Task.DetailsClass d, object sf)
                {
                    c(d, ref d._LongDesc, sf);
                }
                private static bool _LongDesc_ComputeIsReadOnly(global::LightSwitchApplication.Task e)
                {
                    bool result = false;
                    e.LongDesc_IsReadOnly(ref result);
                    return result;
                }
                private static void _LongDesc_Validate(global::LightSwitchApplication.Task e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LongDesc_Validate(r);
                }
                private static string _LongDesc_GetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.ImplementationEntity.LongDesc;
                }
                private static void _LongDesc_SetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LongDesc = v;
                }
                private static void _LongDesc_OnValueChanged(global::LightSwitchApplication.Task e)
                {
                    e.LongDesc_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateTimeStarted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateTimeStarted",
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeStarted_Stub,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeStarted_ComputeIsReadOnly,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeStarted_Validate,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeStarted_GetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeStarted_SetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeStarted_OnValueChanged);
                private static void _DateTimeStarted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Task.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Task.DetailsClass d, object sf)
                {
                    c(d, ref d._DateTimeStarted, sf);
                }
                private static bool _DateTimeStarted_ComputeIsReadOnly(global::LightSwitchApplication.Task e)
                {
                    bool result = false;
                    e.DateTimeStarted_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateTimeStarted_Validate(global::LightSwitchApplication.Task e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateTimeStarted_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateTimeStarted_GetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.ImplementationEntity.DateTimeStarted;
                }
                private static void _DateTimeStarted_SetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateTimeStarted = global::LightSwitchApplication.Task.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _DateTimeStarted_OnValueChanged(global::LightSwitchApplication.Task e)
                {
                    e.DateTimeStarted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateTimeFinished = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateTimeFinished",
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeFinished_Stub,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeFinished_ComputeIsReadOnly,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeFinished_Validate,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeFinished_GetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeFinished_SetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._DateTimeFinished_OnValueChanged);
                private static void _DateTimeFinished_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Task.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Task.DetailsClass d, object sf)
                {
                    c(d, ref d._DateTimeFinished, sf);
                }
                private static bool _DateTimeFinished_ComputeIsReadOnly(global::LightSwitchApplication.Task e)
                {
                    bool result = false;
                    e.DateTimeFinished_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateTimeFinished_Validate(global::LightSwitchApplication.Task e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateTimeFinished_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateTimeFinished_GetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.ImplementationEntity.DateTimeFinished;
                }
                private static void _DateTimeFinished_SetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateTimeFinished = global::LightSwitchApplication.Task.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _DateTimeFinished_OnValueChanged(global::LightSwitchApplication.Task e)
                {
                    e.DateTimeFinished_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Status",
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Task.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Task.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.Task e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.Task e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static global::System.Nullable<int> _Status_GetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.Task e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>>.Entry
                    Severity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Severity",
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Severity_Stub,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Severity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Severity_Validate,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Severity_GetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Severity_SetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Severity_OnValueChanged);
                private static void _Severity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Task.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Task.DetailsClass d, object sf)
                {
                    c(d, ref d._Severity, sf);
                }
                private static bool _Severity_ComputeIsReadOnly(global::LightSwitchApplication.Task e)
                {
                    bool result = false;
                    e.Severity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Severity_Validate(global::LightSwitchApplication.Task e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Severity_Validate(r);
                }
                private static global::System.Nullable<int> _Severity_GetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.ImplementationEntity.Severity;
                }
                private static void _Severity_SetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Severity = v;
                }
                private static void _Severity_OnValueChanged(global::LightSwitchApplication.Task e)
                {
                    e.Severity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Task.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.Task.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.Task e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.Task e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.Task.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.Task e)
                {
                    e.Project_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.TaskDetail>.Entry
                    TaskDetails = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.TaskDetail>.Entry(
                        "TaskDetails",
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._TaskDetails_Stub,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._TaskDetails_GetReferencedEntities,
                        global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties._TaskDetails_GetEntityCollection);
                private static void _TaskDetails_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Task.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.TaskDetail>.Data> c, global::LightSwitchApplication.Task.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskDetails, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TaskDetail> _TaskDetails_GetReferencedEntities(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TaskDetail, global::LightSwitchApplication.TaskDetail.DetailsClass>(global::LightSwitchApplication.Task.DetailsClass.PropertySetProperties.TaskDetails, ref d._TaskDetails);
                }
                private static global::System.Collections.IEnumerable _TaskDetails_GetEntityCollection(global::LightSwitchApplication.Task.DetailsClass d)
                {
                    return d.ImplementationEntity.TaskDetails;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, int>.Data _TaskId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Data _CodeId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Data _ShortDesc;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, string>.Data _LongDesc;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateTimeStarted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateTimeFinished;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::System.Nullable<int>>.Data _Severity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Task, global::LightSwitchApplication.Task.DetailsClass, global::LightSwitchApplication.TaskDetail>.Data _TaskDetails;
            
        }
    
        #endregion
    }
    
    #endregion
}
